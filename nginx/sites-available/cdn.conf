server {

    listen 8082;
    listen [::]:8082;

    server_name _;
    autoindex off;
    root /usr/share/nginx;

    include global/common/block.conf;

    # Enable CORS
    add_header Access-Control-Allow-Origin "*";
    add_header Access-Control-Allow-Headers "x-requested-with";
    add_header Access-Control-Allow-Methods "POST, GET, OPTIONS";
    add_header Access-Control-Max-Age 86400;

    # Styles, scripts
    location ~ ^.+\.(js|css)$ {

        # Handle OPTIONS
        if ( $request_method = "OPTIONS" ) {
            add_header Access-Control-Allow-Origin '*';
            add_header Access-Control-Allow-Headers 'x-requested-with';
            add_header Access-Control-Max-Age 86400;
            add_header Content-Length 0;
            return 204;
        }

        access_log off;
        expires max;
        log_not_found off;
        add_header Pragma public;
        add_header Cache-Control "public, immutable, proxy-revalidate, no-transform";
        add_header Vary "Accept-Encoding";
        try_files $uri @cdn;

    }

    # Images (with webp and avif support)
    location ~ ^.+\.(png|jpg|jpeg|gif|ico|webp|avif|avifs)$ {

        # Handle OPTIONS
        if ( $request_method = "OPTIONS" ) {
            add_header Access-Control-Allow-Origin '*';
            add_header Access-Control-Allow-Headers 'x-requested-with';
            add_header Access-Control-Max-Age 86400;
            add_header Content-Length 0;
            return 204;
        }

        access_log off;
        expires max;
        log_not_found off;
        add_header Pragma public;
        add_header Cache-Control "public, immutable, proxy-revalidate, no-transform";
        add_header Vary "Accept-Encoding";
        try_files $uri$avif_suffix $uri$webp_suffix $uri @cdn;

    }

    # Fonts
    location ~ ^.+\.(eot|ttf|woff|woff2|otf)$ {
        access_log off;
        log_not_found off;
        expires max;
        try_files $uri @cdn;
    }

    # Others
    location ~ ^.+\.(html|txt|svg|svgz|json|webmanifest|zip|gz|gzip|bz2|csv|xml)$ {
        access_log off;
        log_not_found off;
        expires max;
        try_files $uri @cdn;
    }

    # 404 for the rest
    location / {
        return 404;
    }

    # CDN proxy
    # When a static file is not found on the root
    # We request it on the real server block
    location @cdn {
        proxy_cache PROXY_CACHE;
        proxy_cache_key $uri$is_args$args;
        proxy_cache_valid 90d;
        proxy_hide_header "Set-Cookie";
        proxy_ignore_headers "Set-Cookie";
        proxy_intercept_errors on;
        proxy_pass_request_body off;
        proxy_pass_request_headers off;
        proxy_pass http://127.0.0.1:8081;
    }

}
